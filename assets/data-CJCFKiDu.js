import{a_ as S,E as a}from"./index-BpYl9nQJ.js";import{a as w}from"./VList-BsHD8PTL.js";const D=S("data",()=>{const o=a([]),u=a([]),c=a([]),i=a([]),p=a([]),d=a(!1),m=a(!1),g=async()=>{if(!m.value){d.value=!0;try{const e=(await w.get("/satisfactory-calculator/data.json")).data;f(e.items,e.resources),v(e.buildings),h(e.recipes),B(e.resources),y(e.miners),m.value=!0}finally{d.value=!1}}},f=(s,e)=>{Object.entries(s).forEach(([,t])=>{const r=e[t.className]!==null;u.value.push({...t,isResource:r})})},v=s=>{Object.entries(s).forEach(([,e])=>{c.value.push(e)})},h=s=>{Object.entries(s).forEach(([,e])=>{const t=e.producedIn.map(n=>b(n)),r=e.ingredients.map(n=>({item:l(n.item),amount:n.amount})),O=e.products.map(n=>({item:l(n.item),amount:n.amount}));o.value.push({...e,producedInBuildings:t,ingredientItems:r,producedItems:O})})},B=s=>{Object.entries(s).forEach(([,e])=>{const t=l(e.item);i.value.push({...e,resourceItem:t})})},y=s=>{Object.entries(s).forEach(([,e])=>{const t=e.allowedResources.map(r=>N(r));p.value.push({...e,allowedResourceItems:t})})},I=s=>o.value.find(e=>e.slug===s)??null,l=s=>u.value.find(e=>e.className===s)??null,R=s=>u.value.find(e=>e.slug===s)??null,b=s=>c.value.find(e=>e.className===s)??null,j=s=>c.value.find(e=>e.slug===s)??null,E=()=>o.value.filter(s=>!s.alternate&&s.inMachine),N=s=>i.value.find(e=>e.item===s)??null;return{getData:g,getRecipeBySlug:I,getItemBySlug:R,getBuildingBySlug:j,getBaseItemRecipes:E}});export{D as u};
